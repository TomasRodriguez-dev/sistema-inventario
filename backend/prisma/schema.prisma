// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id              Int          @id @default(autoincrement())
  nombre          String?
  correo          String       @unique
  contrasenia     String?
  posteos         Post[]
  ediciones       Ediciones[]  @relation("ediciones_entidad")
  edicionesEditor Ediciones[]  @relation("usuario_edita")

  disponible      Boolean?     @default(true)
  rol             Rol?
  @@index([disponible])
}

enum Rol {
  SUPERADMIN
  ADMIN
  USER
}

model Post {
  id          Int    @id @default(autoincrement())
  titulo      String?
  cuerpo      String?
  autor       Usuario? @relation(fields: [autorId], references: [id])
  autorId     Int?
}

model Ediciones {
  id                Int       @id @default(autoincrement())
  descripcion       String?
  fecha             DateTime? @default(now())
  usuario           Usuario?  @relation("ediciones_entidad", fields: [usuarioId], references: [id])
  usuarioId         Int?
  usuarioEditor     Usuario?  @relation("usuario_edita", fields: [usuarioEditorId], references: [id])
  usuarioEditorId   Int?
  producto          Producto? @relation("producto_ediciones", fields: [productoId], references: [id])
  productoId        Int?
}

model Producto {
  id              Int         @id @default(autoincrement())
  nombre          String
  descripcion     String?
  precio          Float
  cantidad        Int
  activo          Boolean?    @default(true)
  ediciones       Ediciones[] @relation("producto_ediciones")
}
